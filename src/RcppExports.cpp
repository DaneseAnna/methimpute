// This file was generated by Rcpp::compileAttributes
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <Rcpp.h>

using namespace Rcpp;

// fitHMM
List fitHMM(const IntegerVector& counts, const NumericVector& distances, const List& params, const int& algorithm);
RcppExport SEXP popmeth_fitHMM(SEXP countsSEXP, SEXP distancesSEXP, SEXP paramsSEXP, SEXP algorithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const IntegerVector& >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< const List& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< const int& >::type algorithm(algorithmSEXP);
    __result = Rcpp::wrap(fitHMM(counts, distances, params, algorithm));
    return __result;
END_RCPP
}
// fitHMMratio
List fitHMMratio(const NumericVector& ratio, const NumericVector& distances, const List& params, const int& algorithm);
RcppExport SEXP popmeth_fitHMMratio(SEXP ratioSEXP, SEXP distancesSEXP, SEXP paramsSEXP, SEXP algorithmSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const NumericVector& >::type ratio(ratioSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< const List& >::type params(paramsSEXP);
    Rcpp::traits::input_parameter< const int& >::type algorithm(algorithmSEXP);
    __result = Rcpp::wrap(fitHMMratio(ratio, distances, params, algorithm));
    return __result;
END_RCPP
}
// fitMultiHMM
List fitMultiHMM(const IntegerMatrix& counts, const NumericVector& distances, const List& params);
RcppExport SEXP popmeth_fitMultiHMM(SEXP countsSEXP, SEXP distancesSEXP, SEXP paramsSEXP) {
BEGIN_RCPP
    Rcpp::RObject __result;
    Rcpp::RNGScope __rngScope;
    Rcpp::traits::input_parameter< const IntegerMatrix& >::type counts(countsSEXP);
    Rcpp::traits::input_parameter< const NumericVector& >::type distances(distancesSEXP);
    Rcpp::traits::input_parameter< const List& >::type params(paramsSEXP);
    __result = Rcpp::wrap(fitMultiHMM(counts, distances, params));
    return __result;
END_RCPP
}
// cleanup
void cleanup();
RcppExport SEXP popmeth_cleanup() {
BEGIN_RCPP
    Rcpp::RNGScope __rngScope;
    cleanup();
    return R_NilValue;
END_RCPP
}
